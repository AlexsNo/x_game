# Generated by Django 4.2.5 on 2023-09-23 16:50

from django.db import migrations, models
import django.db.models.deletion
import game.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('photo', models.ImageField(upload_to=game.models.content_file_name, verbose_name='Распол. банера')),
            ],
            options={
                'verbose_name': 'Банеры',
                'verbose_name_plural': 'Банеры',
            },
        ),
        migrations.CreateModel(
            name='BaseTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('isPub', models.BooleanField(default=True, verbose_name='Публикация')),
                ('datePub', models.DateField(auto_now_add=True, verbose_name='Дата публикации')),
                ('dateChange', models.DateField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('photo', models.ImageField(upload_to=game.models.content_file_name, verbose_name='Распол. основного фото')),
                ('contentSM', models.CharField(max_length=500, verbose_name='Краткое описание')),
                ('contentMain', models.TextField()),
            ],
            options={
                'verbose_name': 'Тайтл-Аниме',
                'verbose_name_plural': 'Тайтл-Аниме',
                'ordering': ['datePub', 'title'],
            },
        ),
        migrations.CreateModel(
            name='CategoryS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, unique=True, verbose_name='Категория')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Магазин-К',
                'verbose_name_plural': 'Магазин-К',
            },
        ),
        migrations.CreateModel(
            name='CategoryTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, unique=True, verbose_name='Категория')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('photo', models.ImageField(blank=True, upload_to=game.models.content_file_name, verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Тайтл-Категория',
                'verbose_name_plural': 'Тайтл-Категория',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True, verbose_name='Жанр')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('pathPhoto', models.ImageField(blank=True, upload_to=game.models.content_file_name, verbose_name='Распол. фото')),
            ],
            options={
                'verbose_name': 'Тайтл-Жанр',
                'verbose_name_plural': 'Тайтл-Жанр',
            },
        ),
        migrations.CreateModel(
            name='StateTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True, verbose_name='Состояние тайтла')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тайтл-Состояние',
                'verbose_name_plural': 'Тайтл-Состояние',
            },
        ),
        migrations.CreateModel(
            name='TagsShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True, verbose_name='Тэг')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Магазин-Теги',
                'verbose_name_plural': 'Магазин-Теги',
            },
        ),
        migrations.CreateModel(
            name='TagsT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True, verbose_name='Тэг')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тайтл-Тэг',
                'verbose_name_plural': 'Тайтл-Тэг',
            },
        ),
        migrations.CreateModel(
            name='VideoTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to=game.models.content_file_name, verbose_name='Распол. Видео')),
                ('idBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.basetitle', verbose_name='Заголовок Тайтла')),
            ],
            options={
                'verbose_name': 'Тайтл-Видео',
                'verbose_name_plural': 'Тайтл-Видео',
            },
        ),
        migrations.CreateModel(
            name='TagsTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.basetitle', verbose_name='Заголовок Тайтла')),
                ('idGenre', models.ManyToManyField(related_name='genreSet', to='game.genre', verbose_name='Жанр')),
                ('idTag', models.ManyToManyField(blank=True, related_name='tagSet', to='game.tagst', verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тайтл-Тэги',
                'verbose_name_plural': 'Тайтл-Тэги',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Наименование продукта')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('isPub', models.BooleanField(default=True, verbose_name='Публикация')),
                ('datePub', models.DateField(auto_now_add=True, verbose_name='Дата публикации')),
                ('dateChange', models.DateField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('photo', models.ImageField(upload_to='imgShop/%Y/%m/%d', verbose_name='Распол. основного фото')),
                ('contentAdd', models.TextField(verbose_name='Доп.описание')),
                ('content', models.TextField(verbose_name='Описание продукта')),
                ('tagId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.tagsshop', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазин',
                'ordering': ['datePub', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReviewsTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviews', models.TextField(verbose_name='Обзор')),
                ('idBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.basetitle', verbose_name='Заголовок Тайтла')),
            ],
            options={
                'verbose_name': 'Тайтл-Обзоры',
                'verbose_name_plural': 'Тайтл-Обзоры',
            },
        ),
        migrations.CreateModel(
            name='ReviewsShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviews', models.TextField(verbose_name='Обзор')),
                ('idShop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.shop', verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Магазин-Обзоры',
                'verbose_name_plural': 'Магазин-Обзоры',
            },
        ),
        migrations.CreateModel(
            name='PhotoTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathPhoto', models.ImageField(upload_to=game.models.content_file_name, verbose_name='Распол. фото')),
                ('idBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.basetitle', verbose_name='Заголовок Тайтла')),
            ],
            options={
                'verbose_name': 'Тайтл-Изображение',
                'verbose_name_plural': 'Тайтл-Изображение',
            },
        ),
        migrations.CreateModel(
            name='PhotoShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathPhoto', models.ImageField(upload_to='imgShopAll/%Y/%m/%d', verbose_name='Путь фото')),
                ('idShop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.shop', verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Магазин-Фото',
                'verbose_name_plural': 'Магазин-Фото',
            },
        ),
        migrations.CreateModel(
            name='CommentTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('email', models.CharField(max_length=50, verbose_name='Email')),
                ('comment', models.TextField(max_length=600, verbose_name='Комментарий')),
                ('datePub', models.DateField(auto_now_add=True, verbose_name='Дата публикации')),
                ('idBase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.basetitle', verbose_name='Заголовок Тайтла')),
            ],
            options={
                'verbose_name': 'Тайтл-Комментарий',
                'verbose_name_plural': 'Тайтл-Комментарий',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='CategoryShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idCat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.categorys', verbose_name='Категория')),
                ('idShop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.shop', verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Магазин-категории',
                'verbose_name_plural': 'Магазин-категории',
            },
        ),
        migrations.AddField(
            model_name='basetitle',
            name='catId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.categorytitle', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='basetitle',
            name='statId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.statetitle', verbose_name='Состояние'),
        ),
    ]
